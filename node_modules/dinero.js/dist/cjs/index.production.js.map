{"version":3,"file":"index.production.js","sources":["../../../core/dist/esm/checks/messages.js","../../../core/dist/esm/types/Calculator.js","../../../core/dist/esm/helpers/assert.js","../../../core/dist/esm/helpers/createDinero.js","../../../core/dist/esm/utils/equal.js","../../../core/dist/esm/utils/lessThan.js","../../../core/dist/esm/utils/absolute.js","../../../core/dist/esm/utils/isArray.js","../../../core/dist/esm/utils/computeBase.js","../../../core/dist/esm/utils/greaterThan.js","../../../core/dist/esm/utils/greaterThanOrEqual.js","../../../core/dist/esm/utils/distribute.js","../../../core/dist/esm/utils/getAmountAndScale.js","../../../core/dist/esm/utils/isScaledAmount.js","../../../core/dist/esm/utils/getDivisors.js","../../../core/dist/esm/utils/isEven.js","../../../core/dist/esm/utils/isHalf.js","../../../core/dist/esm/utils/maximum.js","../../../core/dist/esm/utils/sign.js","../../../core/dist/esm/api/haveSameCurrency.js","../../../core/dist/esm/divide/down.js","../../../core/dist/esm/divide/halfUp.js","../../../core/dist/esm/divide/up.js","../../../core/dist/esm/api/transformScale.js","../../../core/dist/esm/api/normalizeScale.js","../../../core/dist/esm/api/add.js","../../../core/dist/esm/api/allocate.js","../../../core/dist/esm/api/compare.js","../../../core/dist/esm/utils/compare.js","../../../core/dist/esm/api/convert.js","../../../core/dist/esm/api/haveSameAmount.js","../../../core/dist/esm/api/equal.js","../../../core/dist/esm/api/greaterThan.js","../../../core/dist/esm/api/greaterThanOrEqual.js","../../../core/dist/esm/api/hasSubUnits.js","../../../core/dist/esm/api/isNegative.js","../../../core/dist/esm/api/isPositive.js","../../../core/dist/esm/api/isZero.js","../../../core/dist/esm/api/lessThan.js","../../../core/dist/esm/api/lessThanOrEqual.js","../../../core/dist/esm/utils/lessThanOrEqual.js","../../../core/dist/esm/api/maximum.js","../../../core/dist/esm/api/minimum.js","../../../core/dist/esm/utils/minimum.js","../../../core/dist/esm/api/multiply.js","../../../core/dist/esm/api/subtract.js","../../../core/dist/esm/api/toUnits.js","../../../core/dist/esm/api/toDecimal.js","../../../core/dist/esm/api/trimScale.js","../../../core/dist/esm/utils/countTrailingZeros.js","../../src/api/haveSameCurrency.ts","../../src/api/toSnapshot.ts","../../../core/dist/esm/api/toSnapshot.js","../../../calculator-number/dist/esm/calculator.js","../../src/dinero.ts","../../../calculator-number/dist/esm/api/add.js","../../../calculator-number/dist/esm/api/compare.js","../../../calculator-number/dist/esm/api/decrement.js","../../../calculator-number/dist/esm/api/increment.js","../../../calculator-number/dist/esm/api/integerDivide.js","../../../calculator-number/dist/esm/api/modulo.js","../../../calculator-number/dist/esm/api/multiply.js","../../../calculator-number/dist/esm/api/power.js","../../../calculator-number/dist/esm/api/subtract.js","../../../calculator-number/dist/esm/api/zero.js","../../src/api/add.ts","../../src/api/allocate.ts","../../src/api/compare.ts","../../src/api/convert.ts","../../src/api/equal.ts","../../src/api/greaterThan.ts","../../src/api/greaterThanOrEqual.ts","../../../core/dist/esm/divide/halfAwayFromZero.js","../../../core/dist/esm/divide/halfDown.js","../../../core/dist/esm/divide/halfEven.js","../../../core/dist/esm/divide/halfOdd.js","../../../core/dist/esm/divide/halfTowardsZero.js","../../src/api/hasSubUnits.ts","../../src/api/haveSameAmount.ts","../../src/api/isNegative.ts","../../src/api/isPositive.ts","../../src/api/isZero.ts","../../src/api/lessThan.ts","../../src/api/lessThanOrEqual.ts","../../src/api/maximum.ts","../../src/api/minimum.ts","../../src/api/multiply.ts","../../src/api/normalizeScale.ts","../../src/api/subtract.ts","../../src/api/toDecimal.ts","../../src/api/toUnits.ts","../../src/api/transformScale.ts","../../src/api/trimScale.ts"],"sourcesContent":["export var INVALID_AMOUNT_MESSAGE = 'Amount is invalid.';\nexport var INVALID_SCALE_MESSAGE = 'Scale is invalid.';\nexport var INVALID_RATIOS_MESSAGE = 'Ratios are invalid.';\nexport var UNEQUAL_SCALES_MESSAGE = 'Objects must have the same scale.';\nexport var UNEQUAL_CURRENCIES_MESSAGE = 'Objects must have the same currency.';\nexport var NON_DECIMAL_CURRENCY_MESSAGE = 'Currency is not decimal.';","/* eslint-disable functional/no-mixed-type */\n\nexport var ComparisonOperator;\n(function (ComparisonOperator) {\n  ComparisonOperator[ComparisonOperator[\"LT\"] = -1] = \"LT\";\n  ComparisonOperator[ComparisonOperator[\"EQ\"] = 0] = \"EQ\";\n  ComparisonOperator[ComparisonOperator[\"GT\"] = 1] = \"GT\";\n})(ComparisonOperator || (ComparisonOperator = {}));","/* eslint-disable functional/no-throw-statement, valid-jsdoc */\n/**\n * Assert a condition.\n *\n * @param condition - The condition to verify.\n * @param message - The error message to throw.\n *\n * @throws If the condition isn't met.\n */\nexport function assert(condition, message) {\n  if (!condition) {\n    throw new Error(\"[Dinero.js] \".concat(message));\n  }\n}","/* eslint-disable functional/no-mixed-type, functional/no-return-void, functional/no-expression-statement */\n\nexport function createDinero(_ref) {\n  var calculator = _ref.calculator,\n    onCreate = _ref.onCreate,\n    _ref$formatter = _ref.formatter,\n    formatter = _ref$formatter === void 0 ? {\n      toNumber: Number,\n      toString: String\n    } : _ref$formatter;\n  return function dinero(_ref2) {\n    var amount = _ref2.amount,\n      _ref2$currency = _ref2.currency,\n      code = _ref2$currency.code,\n      base = _ref2$currency.base,\n      exponent = _ref2$currency.exponent,\n      _ref2$scale = _ref2.scale,\n      scale = _ref2$scale === void 0 ? exponent : _ref2$scale;\n    var currency = {\n      code: code,\n      base: base,\n      exponent: exponent\n    };\n    onCreate === null || onCreate === void 0 ? void 0 : onCreate({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n    return {\n      calculator: calculator,\n      formatter: formatter,\n      create: dinero,\n      toJSON: function toJSON() {\n        return {\n          amount: amount,\n          currency: currency,\n          scale: scale\n        };\n      }\n    };\n  };\n}","import { ComparisonOperator } from '../types';\n/**\n * Returns an equal function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The equal function.\n */\nexport function equal(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.EQ;\n  };\n}","import { ComparisonOperator } from '../types';\n/**\n * Returns a lessThan function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The lessThan function.\n */\nexport function lessThan(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.LT;\n  };\n}","import { equal } from './equal';\nimport { lessThan } from './lessThan';\nexport function absolute(calculator) {\n  var equalFn = equal(calculator);\n  var lessThanFn = lessThan(calculator);\n  var zero = calculator.zero();\n  return function (input) {\n    if (equalFn(input, zero)) {\n      return zero;\n    }\n    if (lessThanFn(input, zero)) {\n      var minusOne = calculator.decrement(zero);\n      return calculator.multiply(minusOne, input);\n    }\n    return input;\n  };\n}","export function isArray(maybeArray) {\n  return Array.isArray(maybeArray);\n}","import { isArray } from './isArray';\nexport function computeBase(calculator) {\n  return function (base) {\n    if (isArray(base)) {\n      return base.reduce(function (acc, curr) {\n        return calculator.multiply(acc, curr);\n      });\n    }\n    return base;\n  };\n}","import { ComparisonOperator } from '../types';\n/**\n * Returns a greaterThan function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The greaterThan function.\n */\nexport function greaterThan(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator) === ComparisonOperator.GT;\n  };\n}","import { equal } from './equal';\nimport { greaterThan } from './greaterThan';\n/**\n * Returns a greaterThanOrEqual function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The greaterThanOrEqual function.\n */\nexport function greaterThanOrEqual(calculator) {\n  return function (subject, comparator) {\n    return greaterThan(calculator)(subject, comparator) || equal(calculator)(subject, comparator);\n  };\n}","/* eslint-disable functional/no-let, functional/no-loop-statement, functional/immutable-data, functional/no-expression-statement */\n\nimport { equal } from './equal';\nimport { greaterThan } from './greaterThan';\nimport { greaterThanOrEqual } from './greaterThanOrEqual';\nimport { lessThan } from './lessThan';\n/**\n * Returns a distribute function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The distribute function.\n */\nexport function distribute(calculator) {\n  return function (value, ratios) {\n    var equalFn = equal(calculator);\n    var greaterThanFn = greaterThan(calculator);\n    var lessThanFn = lessThan(calculator);\n    var greaterThanOrEqualFn = greaterThanOrEqual(calculator);\n    var zero = calculator.zero();\n    var one = calculator.increment(zero);\n    var total = ratios.reduce(function (a, b) {\n      return calculator.add(a, b);\n    }, zero);\n    if (equalFn(total, zero)) {\n      return ratios;\n    }\n    var remainder = value;\n    var shares = ratios.map(function (ratio) {\n      var share = calculator.integerDivide(calculator.multiply(value, ratio), total) || zero;\n      remainder = calculator.subtract(remainder, share);\n      return share;\n    });\n    var isPositive = greaterThanOrEqualFn(value, zero);\n    var compare = isPositive ? greaterThanFn : lessThanFn;\n    var amount = isPositive ? one : calculator.decrement(zero);\n    var i = 0;\n    while (compare(remainder, zero)) {\n      if (!equalFn(ratios[i], zero)) {\n        shares[i] = calculator.add(shares[i], amount);\n        remainder = calculator.subtract(remainder, amount);\n      }\n      i++;\n    }\n    return shares;\n  };\n}","import { isScaledAmount } from './isScaledAmount';\nexport function getAmountAndScale(value, zero) {\n  if (isScaledAmount(value)) {\n    var _value$scale;\n    return {\n      amount: value.amount,\n      scale: (_value$scale = value === null || value === void 0 ? void 0 : value.scale) !== null && _value$scale !== void 0 ? _value$scale : zero\n    };\n  }\n  return {\n    amount: value,\n    scale: zero\n  };\n}","export function isScaledAmount(amount) {\n  return amount === null || amount === void 0 ? void 0 : amount.hasOwnProperty('amount');\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nexport function getDivisors(calculator) {\n  var multiply = calculator.multiply;\n  return function (bases) {\n    return bases.reduce(function (divisors, _, i) {\n      var divisor = bases.slice(i).reduce(function (acc, curr) {\n        return multiply(acc, curr);\n      });\n      return [].concat(_toConsumableArray(divisors), [divisor]);\n    }, []);\n  };\n}","import { equal } from '.';\nexport function isEven(calculator) {\n  var equalFn = equal(calculator);\n  var zero = calculator.zero();\n  var two = calculator.increment(calculator.increment(zero));\n  return function (input) {\n    return equalFn(calculator.modulo(input, two), zero);\n  };\n}","import { equal, absolute } from '.';\nexport function isHalf(calculator) {\n  var equalFn = equal(calculator);\n  var absoluteFn = absolute(calculator);\n  return function (input, total) {\n    var remainder = absoluteFn(calculator.modulo(input, total));\n    var difference = calculator.subtract(total, remainder);\n    return equalFn(difference, remainder);\n  };\n}","import { lessThan } from './lessThan';\n/**\n * Returns a maximum function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The maximum function.\n */\nexport function maximum(calculator) {\n  var lessThanFn = lessThan(calculator);\n  return function (values) {\n    return values.reduce(function (acc, curr) {\n      return lessThanFn(acc, curr) ? curr : acc;\n    });\n  };\n}","import { equal } from './equal';\nimport { lessThan } from './lessThan';\nexport function sign(calculator) {\n  var equalFn = equal(calculator);\n  var lessThanFn = lessThan(calculator);\n  var zero = calculator.zero();\n  return function (input) {\n    if (equalFn(input, zero)) {\n      return zero;\n    }\n    var one = calculator.increment(zero);\n    var minusOne = calculator.decrement(zero);\n    return lessThanFn(input, zero) ? minusOne : one;\n  };\n}","function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { computeBase, equal } from '../utils';\nexport function haveSameCurrency(dineroObjects) {\n  var _dineroObjects = _toArray(dineroObjects),\n    firstDinero = _dineroObjects[0],\n    otherDineros = _dineroObjects.slice(1);\n  var computeBaseFn = computeBase(firstDinero.calculator);\n  var _firstDinero$toJSON = firstDinero.toJSON(),\n    comparator = _firstDinero$toJSON.currency;\n  var equalFn = equal(firstDinero.calculator);\n  var comparatorBase = computeBaseFn(comparator.base);\n  return otherDineros.every(function (d) {\n    var _d$toJSON = d.toJSON(),\n      subject = _d$toJSON.currency;\n    var subjectBase = computeBaseFn(subject.base);\n    return subject.code === comparator.code && equalFn(subjectBase, comparatorBase) && equalFn(subject.exponent, comparator.exponent);\n  });\n}","import { equal, greaterThan } from '../utils';\n\n/**\n * Divide and round down.\n *\n * Rounding down happens whenever the quotient is not an integer.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var down = function down(amount, factor, calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  var equalFn = equal(calculator);\n  var zero = calculator.zero();\n  var isPositive = greaterThanFn(amount, zero);\n  var quotient = calculator.integerDivide(amount, factor);\n  var remainder = calculator.modulo(amount, factor);\n  var isInteger = equalFn(remainder, zero);\n  if (isPositive || isInteger) {\n    return quotient;\n  }\n  return calculator.decrement(quotient);\n};","import { absolute, greaterThan, isHalf } from '../utils';\nimport { down, up } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round up.\n *\n * Rounding up happens when:\n * - The quotient is half (e.g., -1.5, 1.5).\n * - The quotient is positive and greater than half (e.g., 1.6).\n * - The quotient is negative and less than half (e.g., -1.4).\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfUp = function halfUp(amount, factor, calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  var isHalfFn = isHalf(calculator);\n  var absoluteFn = absolute(calculator);\n  var zero = calculator.zero();\n  var remainder = absoluteFn(calculator.modulo(amount, factor));\n  var difference = calculator.subtract(factor, remainder);\n  var isLessThanHalf = greaterThanFn(difference, remainder);\n  var isPositive = greaterThanFn(amount, zero);\n  if (isHalfFn(amount, factor) || isPositive && !isLessThanHalf || !isPositive && isLessThanHalf) {\n    return up(amount, factor, calculator);\n  }\n  return down(amount, factor, calculator);\n};","import { equal, greaterThan } from '../utils';\n\n/**\n * Divide and round up.\n *\n * Rounding up happens whenever the quotient is not an integer.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var up = function up(amount, factor, calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  var equalFn = equal(calculator);\n  var zero = calculator.zero();\n  var isPositive = greaterThanFn(amount, zero);\n  var quotient = calculator.integerDivide(amount, factor);\n  var remainder = calculator.modulo(amount, factor);\n  var isInteger = equalFn(remainder, zero);\n  if (!isInteger && isPositive) {\n    return calculator.increment(quotient);\n  }\n  return quotient;\n};","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { down } from '../divide';\nimport { computeBase, greaterThan } from '../utils';\nexport function transformScale(calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  var computeBaseFn = computeBase(calculator);\n  return function transformScaleFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      newScale = _ref[1],\n      _ref$ = _ref[2],\n      divide = _ref$ === void 0 ? down : _ref$;\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var isLarger = greaterThanFn(newScale, scale);\n    var operation = isLarger ? calculator.multiply : divide;\n    var _ref2 = isLarger ? [newScale, scale] : [scale, newScale],\n      _ref3 = _slicedToArray(_ref2, 2),\n      a = _ref3[0],\n      b = _ref3[1];\n    var base = computeBaseFn(currency.base);\n    var factor = calculator.power(base, calculator.subtract(a, b));\n    return dineroObject.create({\n      amount: operation(amount, factor, calculator),\n      currency: currency,\n      scale: newScale\n    });\n  };\n}","import { equal, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function normalizeScale(calculator) {\n  var maximumFn = maximum(calculator);\n  var convertScaleFn = transformScale(calculator);\n  var equalFn = equal(calculator);\n  return function _normalizeScale() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObjects = _ref[0];\n    var highestScale = dineroObjects.reduce(function (highest, current) {\n      var _current$toJSON = current.toJSON(),\n        scale = _current$toJSON.scale;\n      return maximumFn([highest, scale]);\n    }, calculator.zero());\n    return dineroObjects.map(function (d) {\n      var _d$toJSON = d.toJSON(),\n        scale = _d$toJSON.scale;\n      return !equalFn(scale, highestScale) ? convertScaleFn(d, highestScale) : d;\n    });\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeAdd(calculator) {\n  return function add() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var augend = _ref[0],\n      addend = _ref[1];\n    var _augend$toJSON = augend.toJSON(),\n      augendAmount = _augend$toJSON.amount,\n      currency = _augend$toJSON.currency,\n      scale = _augend$toJSON.scale;\n    var _addend$toJSON = addend.toJSON(),\n      addendAmount = _addend$toJSON.amount;\n    var amount = calculator.add(augendAmount, addendAmount);\n    return augend.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\nexport function safeAdd(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var addFn = unsafeAdd(calculator);\n  return function add() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var augend = _ref2[0],\n      addend = _ref2[1];\n    var condition = haveSameCurrency([augend, addend]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([augend, addend]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      newAugend = _normalizeFn2[0],\n      newAddend = _normalizeFn2[1];\n    return addFn(newAugend, newAddend);\n  };\n}","/* eslint-disable functional/no-expression-statement */\nimport { INVALID_RATIOS_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { distribute, equal, getAmountAndScale, greaterThan, greaterThanOrEqual, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nfunction unsafeAllocate(calculator) {\n  return function allocate() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      ratios = _ref[1];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var distributeFn = distribute(calculator);\n    var shares = distributeFn(amount, ratios.map(function (ratio) {\n      return ratio.amount;\n    }));\n    return shares.map(function (share) {\n      return dineroObject.create({\n        amount: share,\n        currency: currency,\n        scale: scale\n      });\n    });\n  };\n}\nexport function safeAllocate(calculator) {\n  var allocateFn = unsafeAllocate(calculator);\n  var greaterThanOrEqualFn = greaterThanOrEqual(calculator);\n  var greaterThanFn = greaterThan(calculator);\n  var convertScaleFn = transformScale(calculator);\n  var maximumFn = maximum(calculator);\n  var equalFn = equal(calculator);\n  var zero = calculator.zero();\n  var ten = new Array(10).fill(null).reduce(calculator.increment, zero);\n  return function allocate() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      ratios = _ref2[1];\n    var hasRatios = ratios.length > 0;\n    var scaledRatios = ratios.map(function (ratio) {\n      return getAmountAndScale(ratio, zero);\n    });\n    var highestRatioScale = hasRatios ? maximumFn(scaledRatios.map(function (_ref3) {\n      var scale = _ref3.scale;\n      return scale;\n    })) : zero;\n    var normalizedRatios = scaledRatios.map(function (_ref4) {\n      var amount = _ref4.amount,\n        scale = _ref4.scale;\n      var factor = equalFn(scale, highestRatioScale) ? zero : calculator.subtract(highestRatioScale, scale);\n      return {\n        amount: calculator.multiply(amount, calculator.power(ten, factor)),\n        scale: scale\n      };\n    });\n    var hasOnlyPositiveRatios = normalizedRatios.every(function (_ref5) {\n      var amount = _ref5.amount;\n      return greaterThanOrEqualFn(amount, zero);\n    });\n    var hasOneNonZeroRatio = normalizedRatios.some(function (_ref6) {\n      var amount = _ref6.amount;\n      return greaterThanFn(amount, zero);\n    });\n    var condition = hasRatios && hasOnlyPositiveRatios && hasOneNonZeroRatio;\n    assert(condition, INVALID_RATIOS_MESSAGE);\n    var _dineroObject$toJSON2 = dineroObject.toJSON(),\n      scale = _dineroObject$toJSON2.scale;\n    var newScale = calculator.add(scale, highestRatioScale);\n    return allocateFn(convertScaleFn(dineroObject, newScale), normalizedRatios);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { compare as cmp } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeCompare(calculator) {\n  var compareFn = cmp(calculator);\n  return function compare() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n        var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n        return amount;\n      }),\n      _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n      subjectAmount = _dineroObjects$map2[0],\n      comparatorAmount = _dineroObjects$map2[1];\n    return compareFn(subjectAmount, comparatorAmount);\n  };\n}\nexport function safeCompare(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var compareFn = unsafeCompare(calculator);\n  return function compare() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      subjectAmount = _normalizeFn2[0],\n      comparatorAmount = _normalizeFn2[1];\n    return compareFn(subjectAmount, comparatorAmount);\n  };\n}","/**\n * Returns a compare function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The compare function.\n */\nexport function compare(calculator) {\n  return function (subject, comparator) {\n    return calculator.compare(subject, comparator);\n  };\n}","import { getAmountAndScale, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function convert(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var maximumFn = maximum(calculator);\n  var zero = calculator.zero();\n  return function convertFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      newCurrency = _ref[1],\n      rates = _ref[2];\n    var rate = rates[newCurrency.code];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      scale = _dineroObject$toJSON.scale;\n    var _getAmountAndScale = getAmountAndScale(rate, zero),\n      rateAmount = _getAmountAndScale.amount,\n      rateScale = _getAmountAndScale.scale;\n    var newScale = calculator.add(scale, rateScale);\n    return convertScaleFn(dineroObject.create({\n      amount: calculator.multiply(amount, rateAmount),\n      currency: newCurrency,\n      scale: newScale\n    }), maximumFn([newScale, newCurrency.exponent]));\n  };\n}","function _toArray(arr) { return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nimport { equal } from '../utils';\nimport { normalizeScale } from './normalizeScale';\nexport function haveSameAmount(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var equalFn = equal(calculator);\n  return function _haveSameAmount() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObjects = _ref[0];\n    var _normalizeFn = normalizeFn(dineroObjects),\n      _normalizeFn2 = _toArray(_normalizeFn),\n      firstDinero = _normalizeFn2[0],\n      otherDineros = _normalizeFn2.slice(1);\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n      comparatorAmount = _firstDinero$toJSON.amount;\n    return otherDineros.every(function (d) {\n      var _d$toJSON = d.toJSON(),\n        subjectAmount = _d$toJSON.amount;\n      return equalFn(subjectAmount, comparatorAmount);\n    });\n  };\n}","import { haveSameAmount } from './haveSameAmount';\nimport { haveSameCurrency } from './haveSameCurrency';\nexport function equal(calculator) {\n  return function _equal() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    return haveSameAmount(calculator)([dineroObject, comparator]) && haveSameCurrency([dineroObject, comparator]);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { greaterThan as gt } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeGreaterThan(calculator) {\n  var greaterThanFn = gt(calculator);\n  return function greaterThan() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n        var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n        return amount;\n      }),\n      _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n      subjectAmount = _dineroObjects$map2[0],\n      comparatorAmount = _dineroObjects$map2[1];\n    return greaterThanFn(subjectAmount, comparatorAmount);\n  };\n}\nexport function safeGreaterThan(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var greaterThanFn = unsafeGreaterThan(calculator);\n  return function greaterThan() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      subjectAmount = _normalizeFn2[0],\n      comparatorAmount = _normalizeFn2[1];\n    return greaterThanFn(subjectAmount, comparatorAmount);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { greaterThanOrEqual as gte } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeGreaterThanOrEqual(calculator) {\n  var greaterThanOrEqualFn = gte(calculator);\n  return function greaterThanOrEqual() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n        var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n        return amount;\n      }),\n      _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n      subjectAmount = _dineroObjects$map2[0],\n      comparatorAmount = _dineroObjects$map2[1];\n    return greaterThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}\nexport function safeGreaterThanOrEqual(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var greaterThanOrEqualFn = unsafeGreaterThanOrEqual(calculator);\n  return function greaterThanOrEqual() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      subjectAmount = _normalizeFn2[0],\n      comparatorAmount = _normalizeFn2[1];\n    return greaterThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}","import { computeBase, equal } from '../utils';\nexport function hasSubUnits(calculator) {\n  var equalFn = equal(calculator);\n  var computeBaseFn = computeBase(calculator);\n  return function _hasSubUnits() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var base = computeBaseFn(currency.base);\n    return !equalFn(calculator.modulo(amount, calculator.power(base, scale)), calculator.zero());\n  };\n}","import { lessThan } from '../utils';\nexport function isNegative(calculator) {\n  var lessThanFn = lessThan(calculator);\n  return function _isNegative() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount;\n    return lessThanFn(amount, calculator.zero());\n  };\n}","import { greaterThan } from '../utils';\nexport function isPositive(calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  return function _isPositive() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount;\n    return greaterThanFn(amount, calculator.zero());\n  };\n}","import { equal } from '../utils';\nexport function isZero(calculator) {\n  var equalFn = equal(calculator);\n  return function _isZero() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount;\n    return equalFn(amount, calculator.zero());\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { lessThan as lt } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeLessThan(calculator) {\n  var lessThanFn = lt(calculator);\n  return function lessThan() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n        var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n        return amount;\n      }),\n      _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n      subjectAmount = _dineroObjects$map2[0],\n      comparatorAmount = _dineroObjects$map2[1];\n    return lessThanFn(subjectAmount, comparatorAmount);\n  };\n}\nexport function safeLessThan(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var lessThanFn = unsafeLessThan(calculator);\n  return function lessThan() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      subjectAmount = _normalizeFn2[0],\n      comparatorAmount = _normalizeFn2[1];\n    return lessThanFn(subjectAmount, comparatorAmount);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { lessThanOrEqual as lte } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeLessThanOrEqual(calculator) {\n  var lessThanOrEqualFn = lte(calculator);\n  return function lessThanOrEqual() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      comparator = _ref[1];\n    var dineroObjects = [dineroObject, comparator];\n    var _dineroObjects$map = dineroObjects.map(function (d) {\n        var _d$toJSON = d.toJSON(),\n          amount = _d$toJSON.amount;\n        return amount;\n      }),\n      _dineroObjects$map2 = _slicedToArray(_dineroObjects$map, 2),\n      subjectAmount = _dineroObjects$map2[0],\n      comparatorAmount = _dineroObjects$map2[1];\n    return lessThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}\nexport function safeLessThanOrEqual(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var lessThanOrEqualFn = unsafeLessThanOrEqual(calculator);\n  return function lessThanOrEqual() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObject = _ref2[0],\n      comparator = _ref2[1];\n    var condition = haveSameCurrency([dineroObject, comparator]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([dineroObject, comparator]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      subjectAmount = _normalizeFn2[0],\n      comparatorAmount = _normalizeFn2[1];\n    return lessThanOrEqualFn(subjectAmount, comparatorAmount);\n  };\n}","import { equal } from './equal';\nimport { lessThan } from './lessThan';\n/**\n * Returns a lessThanOrEqual function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The lessThanOrEqual function.\n */\nexport function lessThanOrEqual(calculator) {\n  return function (subject, comparator) {\n    return lessThan(calculator)(subject, comparator) || equal(calculator)(subject, comparator);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { maximum as max } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeMaximum(calculator) {\n  var maxFn = max(calculator);\n  return function maximum() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObjects = _ref[0];\n    var _dineroObjects = _slicedToArray(dineroObjects, 1),\n      firstDinero = _dineroObjects[0];\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n      currency = _firstDinero$toJSON.currency,\n      scale = _firstDinero$toJSON.scale;\n    var amount = maxFn(dineroObjects.map(function (subject) {\n      var _subject$toJSON = subject.toJSON(),\n        subjectAmount = _subject$toJSON.amount;\n      return subjectAmount;\n    }));\n    return firstDinero.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\nexport function safeMaximum(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var maxFn = unsafeMaximum(calculator);\n  return function maximum() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObjects = _ref2[0];\n    var condition = haveSameCurrency(dineroObjects);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var normalizedDineroObjects = normalizeFn(dineroObjects);\n    return maxFn(normalizedDineroObjects);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { minimum as min } from '../utils';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeMinimum(calculator) {\n  var minFn = min(calculator);\n  return function minimum() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObjects = _ref[0];\n    var _dineroObjects = _slicedToArray(dineroObjects, 1),\n      firstDinero = _dineroObjects[0];\n    var _firstDinero$toJSON = firstDinero.toJSON(),\n      currency = _firstDinero$toJSON.currency,\n      scale = _firstDinero$toJSON.scale;\n    var amount = minFn(dineroObjects.map(function (subject) {\n      var _subject$toJSON = subject.toJSON(),\n        subjectAmount = _subject$toJSON.amount;\n      return subjectAmount;\n    }));\n    return firstDinero.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\nexport function safeMinimum(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var minFn = unsafeMinimum(calculator);\n  return function maximum() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var dineroObjects = _ref2[0];\n    var condition = haveSameCurrency(dineroObjects);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var normalizedDineroObjects = normalizeFn(dineroObjects);\n    return minFn(normalizedDineroObjects);\n  };\n}","import { greaterThan } from './greaterThan';\n/**\n * Returns a minimum function.\n *\n * @param calculator - The calculator to use.\n *\n * @returns The minimum function.\n */\nexport function minimum(calculator) {\n  var greaterThanFn = greaterThan(calculator);\n  return function (values) {\n    return values.reduce(function (acc, curr) {\n      return greaterThanFn(acc, curr) ? curr : acc;\n    });\n  };\n}","import { getAmountAndScale } from '../utils';\nimport { transformScale } from './transformScale';\nexport function multiply(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var zero = calculator.zero();\n  return function multiplyFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var multiplicand = _ref[0],\n      multiplier = _ref[1];\n    var _multiplicand$toJSON = multiplicand.toJSON(),\n      amount = _multiplicand$toJSON.amount,\n      currency = _multiplicand$toJSON.currency,\n      scale = _multiplicand$toJSON.scale;\n    var _getAmountAndScale = getAmountAndScale(multiplier, zero),\n      multiplierAmount = _getAmountAndScale.amount,\n      multiplierScale = _getAmountAndScale.scale;\n    var newScale = calculator.add(scale, multiplierScale);\n    return convertScaleFn(multiplicand.create({\n      amount: calculator.multiply(amount, multiplierAmount),\n      currency: currency,\n      scale: newScale\n    }), newScale);\n  };\n}","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n/* eslint-disable functional/no-expression-statement */\nimport { UNEQUAL_CURRENCIES_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { haveSameCurrency } from './haveSameCurrency';\nimport { normalizeScale } from './normalizeScale';\nfunction unsafeSubtract(calculator) {\n  return function subtract() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var minuend = _ref[0],\n      subtrahend = _ref[1];\n    var _minuend$toJSON = minuend.toJSON(),\n      minuendAmount = _minuend$toJSON.amount,\n      currency = _minuend$toJSON.currency,\n      scale = _minuend$toJSON.scale;\n    var _subtrahend$toJSON = subtrahend.toJSON(),\n      subtrahendAmount = _subtrahend$toJSON.amount;\n    var amount = calculator.subtract(minuendAmount, subtrahendAmount);\n    return minuend.create({\n      amount: amount,\n      currency: currency,\n      scale: scale\n    });\n  };\n}\nexport function safeSubtract(calculator) {\n  var normalizeFn = normalizeScale(calculator);\n  var subtractFn = unsafeSubtract(calculator);\n  return function subtract() {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    var minuend = _ref2[0],\n      subtrahend = _ref2[1];\n    var condition = haveSameCurrency([minuend, subtrahend]);\n    assert(condition, UNEQUAL_CURRENCIES_MESSAGE);\n    var _normalizeFn = normalizeFn([minuend, subtrahend]),\n      _normalizeFn2 = _slicedToArray(_normalizeFn, 2),\n      newMinuend = _normalizeFn2[0],\n      newSubtrahend = _normalizeFn2[1];\n    return subtractFn(newMinuend, newSubtrahend);\n  };\n}","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nimport { isArray, getDivisors } from '../utils';\nexport function toUnits(calculator) {\n  var getDivisorsFn = getDivisors(calculator);\n  return function toUnitsFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      transformer = _ref[1];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var power = calculator.power,\n      integerDivide = calculator.integerDivide,\n      modulo = calculator.modulo;\n    var bases = isArray(currency.base) ? currency.base : [currency.base];\n    var divisors = getDivisorsFn(bases.map(function (base) {\n      return power(base, scale);\n    }));\n    var value = divisors.reduce(function (amounts, divisor, index) {\n      var amountLeft = amounts[index];\n      var quotient = integerDivide(amountLeft, divisor);\n      var remainder = modulo(amountLeft, divisor);\n      return [].concat(_toConsumableArray(amounts.filter(function (_, i) {\n        return i !== index;\n      })), [quotient, remainder]);\n    }, [amount]);\n    if (!transformer) {\n      return value;\n    }\n    return transformer({\n      value: value,\n      currency: currency\n    });\n  };\n}","import { NON_DECIMAL_CURRENCY_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { absolute, computeBase, equal, isArray, lessThan } from '../utils';\nimport { toUnits } from './toUnits';\nexport function toDecimal(calculator) {\n  var toUnitsFn = toUnits(calculator);\n  var computeBaseFn = computeBase(calculator);\n  var equalFn = equal(calculator);\n  return function toDecimalFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      transformer = _ref[1];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var base = computeBaseFn(currency.base);\n    var zero = calculator.zero();\n    var ten = new Array(10).fill(null).reduce(calculator.increment, zero);\n    var isMultiBase = isArray(currency.base);\n    var isBaseTen = equalFn(calculator.modulo(base, ten), zero);\n    var isDecimal = !isMultiBase && isBaseTen;\n\n    // eslint-disable-next-line functional/no-expression-statement\n    assert(isDecimal, NON_DECIMAL_CURRENCY_MESSAGE);\n    var units = toUnitsFn(dineroObject);\n    var getDecimalFn = getDecimal(calculator, dineroObject.formatter);\n    var value = getDecimalFn(units, scale);\n    if (!transformer) {\n      return value;\n    }\n    return transformer({\n      value: value,\n      currency: currency\n    });\n  };\n}\nfunction getDecimal(calculator, formatter) {\n  var absoluteFn = absolute(calculator);\n  var equalFn = equal(calculator);\n  var lessThanFn = lessThan(calculator);\n  var zero = calculator.zero();\n  return function (units, scale) {\n    var whole = formatter.toString(units[0]);\n    var fractional = formatter.toString(absoluteFn(units[1]));\n    var scaleNumber = formatter.toNumber(scale);\n    var decimal = \"\".concat(whole, \".\").concat(fractional.padStart(scaleNumber, '0'));\n    var leadsWithZero = equalFn(units[0], zero);\n    var isNegative = lessThanFn(units[1], zero);\n\n    // A leading negative zero is a special case because the `toString`\n    // formatter won't preserve its negative sign (since 0 === -0).\n    return leadsWithZero && isNegative ? \"-\".concat(decimal) : decimal;\n  };\n}","import { computeBase, countTrailingZeros, equal, maximum } from '../utils';\nimport { transformScale } from './transformScale';\nexport function trimScale(calculator) {\n  var countTrailingZerosFn = countTrailingZeros(calculator);\n  var equalFn = equal(calculator);\n  var maximumFn = maximum(calculator);\n  var transformScaleFn = transformScale(calculator);\n  var computeBaseFn = computeBase(calculator);\n  return function trimScaleFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      amount = _dineroObject$toJSON.amount,\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var base = computeBaseFn(currency.base);\n    var trailingZerosLength = countTrailingZerosFn(amount, base);\n    var difference = calculator.subtract(scale, trailingZerosLength);\n    var newScale = maximumFn([difference, currency.exponent]);\n    if (equalFn(newScale, scale)) {\n      return dineroObject;\n    }\n    return transformScaleFn(dineroObject, newScale);\n  };\n}","/* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement */\n\nimport { equal } from './equal';\nexport function countTrailingZeros(calculator) {\n  var equalFn = equal(calculator);\n  return function (input, base) {\n    var zero = calculator.zero();\n    if (equalFn(zero, input)) {\n      return calculator.zero();\n    }\n    var i = zero;\n    var temp = input;\n    while (equalFn(calculator.modulo(temp, base), zero)) {\n      temp = calculator.integerDivide(temp, base);\n      i = calculator.increment(i);\n    }\n    return i;\n  };\n}","import { haveSameCurrency as coreHaveSameCurrency } from '@dinero.js/core';\n\n/**\n * Check whether a set of Dinero objects have the same currency.\n *\n * @param dineroObjects - The Dinero objects to compare.\n *\n * @returns Whether the Dinero objects have the same currency.\n *\n * @public\n */\nexport const haveSameCurrency = coreHaveSameCurrency;\n","import { toSnapshot as coreToSnapshot } from '@dinero.js/core';\n\n/**\n * Get a snapshot of a Dinero object.\n *\n * @param dineroObject - The Dinero object to format.\n * @param transformer - A transformer function.\n *\n * @returns A snapshot of the object.\n *\n * @public\n */\nexport const toSnapshot = coreToSnapshot;\n","export function toSnapshot(dineroObject) {\n  return dineroObject.toJSON();\n}","import { add, compare, decrement, increment, integerDivide, modulo, multiply, power, subtract, zero } from './api';\nexport var calculator = {\n  add: add,\n  compare: compare,\n  decrement: decrement,\n  increment: increment,\n  integerDivide: integerDivide,\n  modulo: modulo,\n  multiply: multiply,\n  power: power,\n  subtract: subtract,\n  zero: zero\n};","/* eslint-disable functional/no-expression-statement */\nimport { calculator } from '@dinero.js/calculator-number';\nimport {\n  createDinero,\n  assert,\n  INVALID_AMOUNT_MESSAGE,\n  INVALID_SCALE_MESSAGE,\n} from '@dinero.js/core';\n\n/**\n * Create a Dinero object.\n *\n * @param options.amount - The amount in minor currency units.\n * @param options.currency - The currency.\n * @param options.scale - The number of decimal places to represent.\n *\n * @returns The created Dinero object.\n *\n * @public\n */\nexport const dinero = createDinero({\n  calculator,\n  onCreate({ amount, scale }) {\n    assert(Number.isInteger(amount), INVALID_AMOUNT_MESSAGE);\n    assert(Number.isInteger(scale), INVALID_SCALE_MESSAGE);\n  },\n});\n","/**\n * Returns the sum of two numbers.\n *\n * @param augend - The number to add to.\n * @param addend - The number to add.\n *\n * @returns The sum of the two numbers.\n */\nexport var add = function add(augend, addend) {\n  return augend + addend;\n};","import { ComparisonOperator } from '@dinero.js/core';\n/**\n * Compare two numbers.\n *\n * @param a - The first number to compare.\n * @param b - The second number to compare.\n *\n * @returns Whether the two numbers are equal, or whether the first one is greater or less than the other.\n */\nexport var compare = function compare(a, b) {\n  if (a < b) {\n    return ComparisonOperator.LT;\n  }\n  if (a > b) {\n    return ComparisonOperator.GT;\n  }\n  return ComparisonOperator.EQ;\n};","/**\n * Returns an decremented number.\n *\n * @param value - The number to decrement.\n *\n * @returns The decremented number.\n */\nexport var decrement = function decrement(value) {\n  return value - 1;\n};","/**\n * Returns an incremented number.\n *\n * @param value - The number to increment.\n *\n * @returns The incremented number.\n */\nexport var increment = function increment(value) {\n  return value + 1;\n};","/**\n * Returns the quotient of two numbers with no fractional part.\n *\n * @param dividend - The number to divide.\n * @param divisor - The number to divide with.\n *\n * @returns The quotient of the two numbers.\n */\nexport var integerDivide = function integerDivide(dividend, divisor) {\n  return Math.trunc(dividend / divisor);\n};","/**\n * Returns the remainder of two numbers.\n *\n * @param dividend - The number to divide.\n * @param divisor - The number to divide with.\n *\n * @returns The remainder of the two numbers.\n */\nexport var modulo = function modulo(dividend, divisor) {\n  return dividend % divisor;\n};","/**\n * Returns the product of two numbers.\n *\n * @param multiplicand - The number to multiply.\n * @param multiplier - The number to multiply with.\n *\n * @returns The product of the two numbers.\n */\nexport var multiply = function multiply(multiplicand, multiplier) {\n  return multiplicand * multiplier;\n};","/**\n * Returns an number to the power of an exponent.\n *\n * @param base - The base number.\n * @param exponent - The exponent to raise the base to.\n *\n * @returns The base to the power of the exponent.\n */\nexport var power = function power(base, exponent) {\n  return Math.pow(base, exponent);\n};","/**\n * Returns the difference between two numbers.\n *\n * @param minuend - The number to subtract from.\n * @param subtrahend - The number to subtract.\n *\n * @returns The difference of the two numbers.\n */\nexport var subtract = function subtract(minuend, subtrahend) {\n  return minuend - subtrahend;\n};","/**\n * Return zero as a number.\n *\n * @returns Zero as a number.\n */\nexport function zero() {\n  return 0;\n}","import { safeAdd } from '@dinero.js/core';\nimport type { AddParams } from '@dinero.js/core';\n\n/**\n * Add up the passed Dinero objects.\n *\n * @param augend - The Dinero object to add to.\n * @param addend - The Dinero object to add.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function add<TAmount>(...[augend, addend]: AddParams<TAmount>) {\n  const { calculator } = augend;\n  const addFn = safeAdd(calculator);\n\n  return addFn(augend, addend);\n}\n","import { safeAllocate } from '@dinero.js/core';\nimport type { AllocateParams } from '@dinero.js/core';\n\n/**\n * Distribute the amount of a Dinero object across a list of ratios.\n *\n * @param dineroObject - The Dinero object to allocate from.\n * @param ratios - The ratios to allocate the amount to.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function allocate<TAmount>(\n  ...[dineroObject, ratios]: AllocateParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const allocateFn = safeAllocate(calculator);\n\n  return allocateFn(dineroObject, ratios);\n}\n","import { safeCompare } from '@dinero.js/core';\nimport type { CompareParams } from '@dinero.js/core';\n\n/**\n * Compare the value of a Dinero object relative to another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns One of -1, 0, or 1 depending on whether the first Dinero object is less than, equal to, or greater than the other.\n *\n * @public\n */\nexport function compare<TAmount>(\n  ...[dineroObject, comparator]: CompareParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const compareFn = safeCompare(calculator);\n\n  return compareFn(dineroObject, comparator);\n}\n","import { convert as coreConvert } from '@dinero.js/core';\nimport type { ConvertParams } from '@dinero.js/core';\n\n/**\n * Convert a Dinero object to another currency.\n *\n * @param dineroObject - The Dinero object to format.\n * @param newCurrency - The currency to convert to.\n * @param rates - The rates to convert with.\n *\n * @returns A converted Dinero object.\n *\n * @public\n */\nexport function convert<TAmount>(\n  ...[dineroObject, newCurrency, rates]: ConvertParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const converter = coreConvert(calculator);\n\n  return converter(dineroObject, newCurrency, rates);\n}\n","import { equal as coreEqual } from '@dinero.js/core';\nimport type { EqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is equal to another.\n *\n * @param dineroObject - The first Dinero object to compare.\n * @param comparator - The second Dinero object to compare.\n *\n * @returns Whether the Dinero objects are equal.\n *\n * @public\n */\nexport function equal<TAmount>(\n  ...[dineroObject, comparator]: EqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const equalFn = coreEqual(calculator);\n\n  return equalFn(dineroObject, comparator);\n}\n","import { safeGreaterThan } from '@dinero.js/core';\nimport type { GreaterThanParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is greater than another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is greater than the other.\n *\n * @public\n */\nexport function greaterThan<TAmount>(\n  ...[dineroObject, comparator]: GreaterThanParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const greaterThanFn = safeGreaterThan(calculator);\n\n  return greaterThanFn(dineroObject, comparator);\n}\n","import { safeGreaterThanOrEqual } from '@dinero.js/core';\nimport type { GreaterThanOrEqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is greater than or equal another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is greater than or equal the other.\n *\n * @public\n */\nexport function greaterThanOrEqual<TAmount>(\n  ...[dineroObject, comparator]: GreaterThanOrEqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const greaterThanOrEqualFn = safeGreaterThanOrEqual(calculator);\n\n  return greaterThanOrEqualFn(dineroObject, comparator);\n}\n","import { sign, isHalf, absolute } from '../utils';\nimport { halfUp, up } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round away from zero.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfAwayFromZero = function halfAwayFromZero(amount, factor, calculator) {\n  var signFn = sign(calculator);\n  var isHalfFn = isHalf(calculator);\n  var absoluteFn = absolute(calculator);\n  if (!isHalfFn(amount, factor)) {\n    return halfUp(amount, factor, calculator);\n  }\n  return calculator.multiply(signFn(amount), up(absoluteFn(amount), factor, calculator));\n};","import { isHalf } from '../utils';\nimport { down, halfUp } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round down.\n *\n * Rounding down happens when:\n * - The quotient is half (e.g., -1.5, 1.5).\n * - The quotient is positive and less than half (e.g., 1.4).\n * - The quotient is negative and greater than half (e.g., -1.6).\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfDown = function halfDown(amount, factor, calculator) {\n  var isHalfFn = isHalf(calculator);\n  if (isHalfFn(amount, factor)) {\n    return down(amount, factor, calculator);\n  }\n  return halfUp(amount, factor, calculator);\n};","import { isEven, isHalf } from '../utils';\nimport { halfUp } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round to the nearest even integer.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfEven = function halfEven(amount, factor, calculator) {\n  var isEvenFn = isEven(calculator);\n  var isHalfFn = isHalf(calculator);\n  var rounded = halfUp(amount, factor, calculator);\n  if (!isHalfFn(amount, factor)) {\n    return rounded;\n  }\n  return isEvenFn(rounded) ? rounded : calculator.decrement(rounded);\n};","import { isEven, isHalf } from '../utils';\nimport { halfUp } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round to the nearest odd integer.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfOdd = function halfOdd(amount, factor, calculator) {\n  var isEvenFn = isEven(calculator);\n  var isHalfFn = isHalf(calculator);\n  var rounded = halfUp(amount, factor, calculator);\n  if (!isHalfFn(amount, factor)) {\n    return rounded;\n  }\n  return isEvenFn(rounded) ? calculator.decrement(rounded) : rounded;\n};","import { sign, isHalf, absolute } from '../utils';\nimport { halfUp, down } from '.';\n\n/**\n * Divide and round towards \"nearest neighbor\" unless both neighbors are\n * equidistant, in which case round towards zero.\n *\n * @param amount - The amount to divide.\n * @param factor - The factor to divide by.\n * @param calculator - The calculator to use.\n *\n * @returns The rounded amount.\n */\nexport var halfTowardsZero = function halfTowardsZero(amount, factor, calculator) {\n  var signFn = sign(calculator);\n  var isHalfFn = isHalf(calculator);\n  var absoluteFn = absolute(calculator);\n  if (!isHalfFn(amount, factor)) {\n    return halfUp(amount, factor, calculator);\n  }\n  return calculator.multiply(signFn(amount), down(absoluteFn(amount), factor, calculator));\n};","import { hasSubUnits as coreHasSubUnits } from '@dinero.js/core';\nimport type { HasSubUnitsParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object has minor currency units.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object has minor currency units.\n *\n * @public\n */\nexport function hasSubUnits<TAmount>(\n  ...[dineroObject]: HasSubUnitsParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const hasSubUnitsFn = coreHasSubUnits(calculator);\n\n  return hasSubUnitsFn(dineroObject);\n}\n","import { haveSameAmount as coreHaveSameAmount } from '@dinero.js/core';\nimport type { HaveSameAmountParams } from '@dinero.js/core';\n\n/**\n * Check whether a set of Dinero objects have the same amount.\n *\n * @param dineroObjects - The Dinero objects to compare.\n *\n * @returns Whether the Dinero objects have the same amount.\n *\n * @public\n */\nexport function haveSameAmount<TAmount>(\n  ...[dineroObjects]: HaveSameAmountParams<TAmount>\n) {\n  const { calculator } = dineroObjects[0];\n  const haveSameAmountFn = coreHaveSameAmount(calculator);\n\n  return haveSameAmountFn(dineroObjects);\n}\n","import { isNegative as coreIsNegative } from '@dinero.js/core';\nimport type { IsNegativeParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object is negative.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object is negative.\n *\n * @public\n */\nexport function isNegative<TAmount>(\n  ...[dineroObject]: IsNegativeParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const isNegativeFn = coreIsNegative(calculator);\n\n  return isNegativeFn(dineroObject);\n}\n","import { isPositive as coreIsPositive } from '@dinero.js/core';\nimport type { IsPositiveParams } from '@dinero.js/core';\n\n/**\n * Check whether a Dinero object is positive.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the Dinero object is positive.\n *\n * @public\n */\nexport function isPositive<TAmount>(\n  ...[dineroObject]: IsPositiveParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const isPositiveFn = coreIsPositive(calculator);\n\n  return isPositiveFn(dineroObject);\n}\n","import { isZero as coreIsZero } from '@dinero.js/core';\nimport type { IsZeroParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is zero.\n *\n * @param dineroObject - The Dinero object to check.\n *\n * @returns Whether the value of a Dinero object is zero.\n *\n * @public\n */\nexport function isZero<TAmount>(...[dineroObject]: IsZeroParams<TAmount>) {\n  const { calculator } = dineroObject;\n  const isZeroFn = coreIsZero(calculator);\n\n  return isZeroFn(dineroObject);\n}\n","import { safeLessThan } from '@dinero.js/core';\nimport type { LessThanParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is lesser than another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is lesser than the other.\n *\n * @public\n */\nexport function lessThan<TAmount>(\n  ...[dineroObject, comparator]: LessThanParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const lessThanFn = safeLessThan(calculator);\n\n  return lessThanFn(dineroObject, comparator);\n}\n","import { safeLessThanOrEqual } from '@dinero.js/core';\nimport type { LessThanOrEqualParams } from '@dinero.js/core';\n\n/**\n * Check whether the value of a Dinero object is lesser than or equal to another.\n *\n * @param dineroObject - The Dinero object to compare.\n * @param comparator - The Dinero object to compare to.\n *\n * @returns Whether the Dinero to compare is lesser than or equal to the other.\n *\n * @public\n */\nexport function lessThanOrEqual<TAmount>(\n  ...[dineroObject, comparator]: LessThanOrEqualParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const lessThanOrEqualFn = safeLessThanOrEqual(calculator);\n\n  return lessThanOrEqualFn(dineroObject, comparator);\n}\n","import { safeMaximum } from '@dinero.js/core';\nimport type { MaximumParams } from '@dinero.js/core';\n\n/**\n * Get the greatest of the passed Dinero objects.\n *\n * @param dineroObjects - The Dinero objects to maximum.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function maximum<TAmount>(...[dineroObjects]: MaximumParams<TAmount>) {\n  const { calculator } = dineroObjects[0];\n  const maximumFn = safeMaximum(calculator);\n\n  return maximumFn(dineroObjects);\n}\n","import { safeMinimum } from '@dinero.js/core';\nimport type { MinimumParams } from '@dinero.js/core';\n\n/**\n * Get the lowest of the passed Dinero objects.\n *\n * @param dineroObjects - The Dinero objects to minimum.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function minimum<TAmount>(...[dineroObjects]: MinimumParams<TAmount>) {\n  const { calculator } = dineroObjects[0];\n  const minimumFn = safeMinimum(calculator);\n\n  return minimumFn(dineroObjects);\n}\n","import { multiply as coreMultiply } from '@dinero.js/core';\nimport type { MultiplyParams } from '@dinero.js/core';\n\n/**\n * Multiply the passed Dinero object.\n *\n * @param multiplicand - The Dinero object to multiply.\n * @param multiplier - The number to multiply with.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function multiply<TAmount>(\n  ...[multiplicand, multiplier]: MultiplyParams<TAmount>\n) {\n  const { calculator } = multiplicand;\n  const multiplyFn = coreMultiply(calculator);\n\n  return multiplyFn(multiplicand, multiplier);\n}\n","import { normalizeScale as coreNormalizeScale } from '@dinero.js/core';\nimport type { NormalizeScaleParams } from '@dinero.js/core';\n\n/**\n * Normalize a set of Dinero objects to the highest scale of the set.\n *\n * @param dineroObjects - The Dinero objects to normalize.\n *\n * @returns A new set of Dinero objects.\n *\n * @public\n */\nexport function normalizeScale<TAmount>(\n  ...[dineroObjects]: NormalizeScaleParams<TAmount>\n) {\n  const { calculator } = dineroObjects[0];\n  const normalizeScaleFn = coreNormalizeScale(calculator);\n\n  return normalizeScaleFn(dineroObjects);\n}\n","import { safeSubtract } from '@dinero.js/core';\nimport type { SubtractParams } from '@dinero.js/core';\n\n/**\n * Subtract the passed Dinero objects.\n *\n * @param minuend - The Dinero object to subtract from.\n * @param subtrahend - The Dinero object to subtract.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function subtract<TAmount>(\n  ...[minuend, subtrahend]: SubtractParams<TAmount>\n) {\n  const { calculator } = minuend;\n  const subtractFn = safeSubtract(calculator);\n\n  return subtractFn(minuend, subtrahend);\n}\n","import { toDecimal as coreToDecimal } from '@dinero.js/core';\nimport type { ToDecimalParams, Dinero, Transformer } from '@dinero.js/core';\n\nexport function toDecimal<TAmount>(dineroObject: Dinero<TAmount>): string;\n\nexport function toDecimal<TAmount, TOutput>(\n  dineroObject: Dinero<TAmount>,\n  transformer: Transformer<TAmount, TOutput, string>\n): TOutput;\n\n/**\n * Get the amount of a Dinero object in decimal form.\n *\n * @param dineroObject - The Dinero object to format.\n * @param transformer - A transformer function.\n *\n * @returns The amount in decimal form.\n *\n * @public\n */\nexport function toDecimal<TAmount, TOutput>(\n  ...[dineroObject, transformer]: ToDecimalParams<TAmount, TOutput>\n) {\n  const { calculator } = dineroObject;\n  const toDecimalFn = coreToDecimal<TAmount, TOutput>(calculator);\n\n  return toDecimalFn(dineroObject, transformer);\n}\n","import { toUnits as coreToUnits } from '@dinero.js/core';\nimport type { ToUnitsParams, Dinero, Transformer } from '@dinero.js/core';\n\nexport function toUnits<TAmount>(\n  dineroObject: Dinero<TAmount>\n): readonly TAmount[];\n\nexport function toUnits<TAmount, TOutput>(\n  dineroObject: Dinero<TAmount>,\n  transformer: Transformer<TAmount, TOutput, readonly TAmount[]>\n): TOutput;\n\n/**\n * Get the amount of a Dinero object in units.\n *\n * @param dineroObject - The Dinero object to format.\n * @param transformer - A transformer function.\n *\n * @returns The amount in units.\n *\n * @public\n */\nexport function toUnits<TAmount, TOutput>(\n  ...[dineroObject, transformer]: ToUnitsParams<TAmount, TOutput>\n) {\n  const { calculator } = dineroObject;\n  const toUnitsFn = coreToUnits<TAmount, TOutput>(calculator);\n\n  return toUnitsFn(dineroObject, transformer);\n}\n","import { transformScale as coreTransformScale } from '@dinero.js/core';\nimport type { TransformScaleParams } from '@dinero.js/core';\n\n/**\n * Transform a Dinero object to a new scale.\n *\n * @param dineroObject - The Dinero object to transform.\n * @param newScale - The new scale.\n * @param divide - A custom divide function.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function transformScale<TAmount>(\n  ...[dineroObject, newScale, divide]: TransformScaleParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const transformScaleFn = coreTransformScale(calculator);\n\n  return transformScaleFn(dineroObject, newScale, divide);\n}\n","import { trimScale as coreTrimScale } from '@dinero.js/core';\nimport type { TrimScaleParams } from '@dinero.js/core';\n\n/**\n * Trim a Dinero object's scale as much as possible, down to the currency exponent.\n *\n * @param dineroObject - The Dinero object which scale to trim.\n *\n * @returns A new Dinero object.\n *\n * @public\n */\nexport function trimScale<TAmount>(\n  ...[dineroObject]: TrimScaleParams<TAmount>\n) {\n  const { calculator } = dineroObject;\n  const trimScaleFn = coreTrimScale(calculator);\n\n  return trimScaleFn(dineroObject);\n}\n"],"names":["ComparisonOperator","UNEQUAL_CURRENCIES_MESSAGE","assert","condition","message","Error","concat","createDinero","_ref","calculator","onCreate","_ref$formatter","formatter","toNumber","Number","toString","String","dinero","_ref2","amount","_ref2$currency","currency","code","base","exponent","_ref2$scale","scale","create","toJSON","equal","subject","comparator","compare","EQ","lessThan","LT","absolute","equalFn","lessThanFn","zero","input","minusOne","decrement","multiply","isArray","maybeArray","Array","computeBase","reduce","acc","curr","greaterThan","GT","greaterThanOrEqual","distribute","value","ratios","greaterThanFn","greaterThanOrEqualFn","one","increment","total","a","b","add","remainder","shares","map","ratio","share","integerDivide","subtract","isPositive","i","getAmountAndScale","_value$scale","hasOwnProperty","_toConsumableArray","arr","_arrayLikeToArray","_arrayWithoutHoles","iter","Symbol","iterator","from","_iterableToArray","o","minLen","n","Object","prototype","call","slice","constructor","name","test","_unsupportedIterableToArray","TypeError","_nonIterableSpread","len","length","arr2","isEven","two","modulo","isHalf","absoluteFn","difference","maximum","values","sign","_toArray","_arrayWithHoles","_nonIterableRest","haveSameCurrency","dineroObjects","_dineroObjects","firstDinero","otherDineros","computeBaseFn","comparatorBase","every","d","subjectBase","down","factor","quotient","isInteger","halfUp","isHalfFn","isLessThanHalf","up","_slicedToArray","_i","_s","_e","_arr","_n","_d","next","done","push","err","_iterableToArrayLimit","transformScale","_len","arguments","_key","dineroObject","newScale","_ref$","divide","_dineroObject$toJSON","isLarger","operation","_ref3","power","normalizeScale","maximumFn","convertScaleFn","highestScale","highest","current","safeAdd","normalizeFn","addFn","augend","addend","_augend$toJSON","augendAmount","addendAmount","unsafeAdd","_len2","_key2","_normalizeFn","_normalizeFn2","newAugend","newAddend","safeAllocate","allocateFn","distributeFn","unsafeAllocate","ten","fill","hasRatios","scaledRatios","highestRatioScale","normalizedRatios","_ref4","hasOnlyPositiveRatios","_ref5","hasOneNonZeroRatio","some","_ref6","_dineroObject$toJSON2","safeCompare","compareFn","cmp","_dineroObjects$map2","subjectAmount","comparatorAmount","unsafeCompare","convert","newCurrency","rates","rate","_getAmountAndScale","rateAmount","rateScale","haveSameAmount","_firstDinero$toJSON","safeGreaterThan","gt","unsafeGreaterThan","safeGreaterThanOrEqual","gte","unsafeGreaterThanOrEqual","hasSubUnits","isNegative","isZero","safeLessThan","lt","unsafeLessThan","unsafeLessThanOrEqual","lessThanOrEqualFn","lte","_dineroObjects$map","safeLessThanOrEqual","safeMaximum","maxFn","max","unsafeMaximum","normalizedDineroObjects","unsafeMinimum","minFn","min","safeMinimum","multiplicand","multiplier","_multiplicand$toJSON","multiplierAmount","multiplierScale","safeSubtract","subtractFn","minuend","subtrahend","_minuend$toJSON","minuendAmount","subtrahendAmount","unsafeSubtract","newMinuend","newSubtrahend","toUnits","getDivisorsFn","bases","divisors","_","divisor","getDivisors","transformer","amounts","index","amountLeft","filter","toDecimal","toUnitsFn","isMultiBase","isBaseTen","isDecimal","units","getDecimalFn","getDecimal","whole","fractional","scaleNumber","decimal","padStart","leadsWithZero","trimScale","countTrailingZerosFn","temp","countTrailingZeros","transformScaleFn","trailingZerosLength","coreHaveSameCurrency","toSnapshot","dividend","Math","trunc","pow","converter","coreConvert","coreEqual","signFn","isEvenFn","rounded","hasSubUnitsFn","coreHasSubUnits","haveSameAmountFn","coreHaveSameAmount","isNegativeFn","coreIsNegative","isPositiveFn","coreIsPositive","isZeroFn","coreIsZero","minimumFn","multiplyFn","coreMultiply","normalizeScaleFn","coreNormalizeScale","toDecimalFn","coreToDecimal","coreToUnits","coreTransformScale","trimScaleFn","coreTrimScale"],"mappings":"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"}