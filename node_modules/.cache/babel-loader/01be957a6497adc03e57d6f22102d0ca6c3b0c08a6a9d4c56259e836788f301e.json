{"ast":null,"code":"/* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement */\n\nimport { equal } from './equal';\nexport function countTrailingZeros(calculator) {\n  var equalFn = equal(calculator);\n  return function (input, base) {\n    var zero = calculator.zero();\n    if (equalFn(zero, input)) {\n      return calculator.zero();\n    }\n    var i = zero;\n    var temp = input;\n    while (equalFn(calculator.modulo(temp, base), zero)) {\n      temp = calculator.integerDivide(temp, base);\n      i = calculator.increment(i);\n    }\n    return i;\n  };\n}","map":{"version":3,"names":["equal","countTrailingZeros","calculator","equalFn","input","base","zero","i","temp","modulo","integerDivide","increment"],"sources":["/Users/chris/Desktop/uber/node_modules/@dinero.js/core/dist/esm/utils/countTrailingZeros.js"],"sourcesContent":["/* eslint-disable functional/no-let, functional/no-loop-statement, functional/no-expression-statement */\n\nimport { equal } from './equal';\nexport function countTrailingZeros(calculator) {\n  var equalFn = equal(calculator);\n  return function (input, base) {\n    var zero = calculator.zero();\n    if (equalFn(zero, input)) {\n      return calculator.zero();\n    }\n    var i = zero;\n    var temp = input;\n    while (equalFn(calculator.modulo(temp, base), zero)) {\n      temp = calculator.integerDivide(temp, base);\n      i = calculator.increment(i);\n    }\n    return i;\n  };\n}"],"mappings":"AAAA;;AAEA,SAASA,KAAK,QAAQ,SAAS;AAC/B,OAAO,SAASC,kBAAkBA,CAACC,UAAU,EAAE;EAC7C,IAAIC,OAAO,GAAGH,KAAK,CAACE,UAAU,CAAC;EAC/B,OAAO,UAAUE,KAAK,EAAEC,IAAI,EAAE;IAC5B,IAAIC,IAAI,GAAGJ,UAAU,CAACI,IAAI,CAAC,CAAC;IAC5B,IAAIH,OAAO,CAACG,IAAI,EAAEF,KAAK,CAAC,EAAE;MACxB,OAAOF,UAAU,CAACI,IAAI,CAAC,CAAC;IAC1B;IACA,IAAIC,CAAC,GAAGD,IAAI;IACZ,IAAIE,IAAI,GAAGJ,KAAK;IAChB,OAAOD,OAAO,CAACD,UAAU,CAACO,MAAM,CAACD,IAAI,EAAEH,IAAI,CAAC,EAAEC,IAAI,CAAC,EAAE;MACnDE,IAAI,GAAGN,UAAU,CAACQ,aAAa,CAACF,IAAI,EAAEH,IAAI,CAAC;MAC3CE,CAAC,GAAGL,UAAU,CAACS,SAAS,CAACJ,CAAC,CAAC;IAC7B;IACA,OAAOA,CAAC;EACV,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}