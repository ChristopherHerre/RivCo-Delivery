{"ast":null,"code":"import { NON_DECIMAL_CURRENCY_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { absolute, computeBase, equal, isArray, lessThan } from '../utils';\nimport { toUnits } from './toUnits';\nexport function toDecimal(calculator) {\n  var toUnitsFn = toUnits(calculator);\n  var computeBaseFn = computeBase(calculator);\n  var equalFn = equal(calculator);\n  return function toDecimalFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      transformer = _ref[1];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var base = computeBaseFn(currency.base);\n    var zero = calculator.zero();\n    var ten = new Array(10).fill(null).reduce(calculator.increment, zero);\n    var isMultiBase = isArray(currency.base);\n    var isBaseTen = equalFn(calculator.modulo(base, ten), zero);\n    var isDecimal = !isMultiBase && isBaseTen;\n\n    // eslint-disable-next-line functional/no-expression-statement\n    assert(isDecimal, NON_DECIMAL_CURRENCY_MESSAGE);\n    var units = toUnitsFn(dineroObject);\n    var getDecimalFn = getDecimal(calculator, dineroObject.formatter);\n    var value = getDecimalFn(units, scale);\n    if (!transformer) {\n      return value;\n    }\n    return transformer({\n      value: value,\n      currency: currency\n    });\n  };\n}\nfunction getDecimal(calculator, formatter) {\n  var absoluteFn = absolute(calculator);\n  var equalFn = equal(calculator);\n  var lessThanFn = lessThan(calculator);\n  var zero = calculator.zero();\n  return function (units, scale) {\n    var whole = formatter.toString(units[0]);\n    var fractional = formatter.toString(absoluteFn(units[1]));\n    var scaleNumber = formatter.toNumber(scale);\n    var decimal = \"\".concat(whole, \".\").concat(fractional.padStart(scaleNumber, '0'));\n    var leadsWithZero = equalFn(units[0], zero);\n    var isNegative = lessThanFn(units[1], zero);\n\n    // A leading negative zero is a special case because the `toString`\n    // formatter won't preserve its negative sign (since 0 === -0).\n    return leadsWithZero && isNegative ? \"-\".concat(decimal) : decimal;\n  };\n}","map":{"version":3,"names":["NON_DECIMAL_CURRENCY_MESSAGE","assert","absolute","computeBase","equal","isArray","lessThan","toUnits","toDecimal","calculator","toUnitsFn","computeBaseFn","equalFn","toDecimalFn","_len","arguments","length","_ref","Array","_key","dineroObject","transformer","_dineroObject$toJSON","toJSON","currency","scale","base","zero","ten","fill","reduce","increment","isMultiBase","isBaseTen","modulo","isDecimal","units","getDecimalFn","getDecimal","formatter","value","absoluteFn","lessThanFn","whole","toString","fractional","scaleNumber","toNumber","decimal","concat","padStart","leadsWithZero","isNegative"],"sources":["/Users/chris/Desktop/uber/node_modules/@dinero.js/core/dist/esm/api/toDecimal.js"],"sourcesContent":["import { NON_DECIMAL_CURRENCY_MESSAGE } from '../checks';\nimport { assert } from '../helpers';\nimport { absolute, computeBase, equal, isArray, lessThan } from '../utils';\nimport { toUnits } from './toUnits';\nexport function toDecimal(calculator) {\n  var toUnitsFn = toUnits(calculator);\n  var computeBaseFn = computeBase(calculator);\n  var equalFn = equal(calculator);\n  return function toDecimalFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var dineroObject = _ref[0],\n      transformer = _ref[1];\n    var _dineroObject$toJSON = dineroObject.toJSON(),\n      currency = _dineroObject$toJSON.currency,\n      scale = _dineroObject$toJSON.scale;\n    var base = computeBaseFn(currency.base);\n    var zero = calculator.zero();\n    var ten = new Array(10).fill(null).reduce(calculator.increment, zero);\n    var isMultiBase = isArray(currency.base);\n    var isBaseTen = equalFn(calculator.modulo(base, ten), zero);\n    var isDecimal = !isMultiBase && isBaseTen;\n\n    // eslint-disable-next-line functional/no-expression-statement\n    assert(isDecimal, NON_DECIMAL_CURRENCY_MESSAGE);\n    var units = toUnitsFn(dineroObject);\n    var getDecimalFn = getDecimal(calculator, dineroObject.formatter);\n    var value = getDecimalFn(units, scale);\n    if (!transformer) {\n      return value;\n    }\n    return transformer({\n      value: value,\n      currency: currency\n    });\n  };\n}\nfunction getDecimal(calculator, formatter) {\n  var absoluteFn = absolute(calculator);\n  var equalFn = equal(calculator);\n  var lessThanFn = lessThan(calculator);\n  var zero = calculator.zero();\n  return function (units, scale) {\n    var whole = formatter.toString(units[0]);\n    var fractional = formatter.toString(absoluteFn(units[1]));\n    var scaleNumber = formatter.toNumber(scale);\n    var decimal = \"\".concat(whole, \".\").concat(fractional.padStart(scaleNumber, '0'));\n    var leadsWithZero = equalFn(units[0], zero);\n    var isNegative = lessThanFn(units[1], zero);\n\n    // A leading negative zero is a special case because the `toString`\n    // formatter won't preserve its negative sign (since 0 === -0).\n    return leadsWithZero && isNegative ? \"-\".concat(decimal) : decimal;\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}