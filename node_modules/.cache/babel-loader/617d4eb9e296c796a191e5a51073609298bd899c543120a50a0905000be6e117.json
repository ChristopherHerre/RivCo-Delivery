{"ast":null,"code":"import { getAmountAndScale } from '../utils';\nimport { transformScale } from './transformScale';\nexport function multiply(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var zero = calculator.zero();\n  return function multiplyFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var multiplicand = _ref[0],\n      multiplier = _ref[1];\n    var _multiplicand$toJSON = multiplicand.toJSON(),\n      amount = _multiplicand$toJSON.amount,\n      currency = _multiplicand$toJSON.currency,\n      scale = _multiplicand$toJSON.scale;\n    var _getAmountAndScale = getAmountAndScale(multiplier, zero),\n      multiplierAmount = _getAmountAndScale.amount,\n      multiplierScale = _getAmountAndScale.scale;\n    var newScale = calculator.add(scale, multiplierScale);\n    return convertScaleFn(multiplicand.create({\n      amount: calculator.multiply(amount, multiplierAmount),\n      currency: currency,\n      scale: newScale\n    }), newScale);\n  };\n}","map":{"version":3,"names":["getAmountAndScale","transformScale","multiply","calculator","convertScaleFn","zero","multiplyFn","_len","arguments","length","_ref","Array","_key","multiplicand","multiplier","_multiplicand$toJSON","toJSON","amount","currency","scale","_getAmountAndScale","multiplierAmount","multiplierScale","newScale","add","create"],"sources":["/Users/chris/Desktop/uber/node_modules/@dinero.js/core/dist/esm/api/multiply.js"],"sourcesContent":["import { getAmountAndScale } from '../utils';\nimport { transformScale } from './transformScale';\nexport function multiply(calculator) {\n  var convertScaleFn = transformScale(calculator);\n  var zero = calculator.zero();\n  return function multiplyFn() {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    var multiplicand = _ref[0],\n      multiplier = _ref[1];\n    var _multiplicand$toJSON = multiplicand.toJSON(),\n      amount = _multiplicand$toJSON.amount,\n      currency = _multiplicand$toJSON.currency,\n      scale = _multiplicand$toJSON.scale;\n    var _getAmountAndScale = getAmountAndScale(multiplier, zero),\n      multiplierAmount = _getAmountAndScale.amount,\n      multiplierScale = _getAmountAndScale.scale;\n    var newScale = calculator.add(scale, multiplierScale);\n    return convertScaleFn(multiplicand.create({\n      amount: calculator.multiply(amount, multiplierAmount),\n      currency: currency,\n      scale: newScale\n    }), newScale);\n  };\n}"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,UAAU;AAC5C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,OAAO,SAASC,QAAQA,CAACC,UAAU,EAAE;EACnC,IAAIC,cAAc,GAAGH,cAAc,CAACE,UAAU,CAAC;EAC/C,IAAIE,IAAI,GAAGF,UAAU,CAACE,IAAI,CAAC,CAAC;EAC5B,OAAO,SAASC,UAAUA,CAAA,EAAG;IAC3B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IACA,IAAIC,YAAY,GAAGH,IAAI,CAAC,CAAC,CAAC;MACxBI,UAAU,GAAGJ,IAAI,CAAC,CAAC,CAAC;IACtB,IAAIK,oBAAoB,GAAGF,YAAY,CAACG,MAAM,CAAC,CAAC;MAC9CC,MAAM,GAAGF,oBAAoB,CAACE,MAAM;MACpCC,QAAQ,GAAGH,oBAAoB,CAACG,QAAQ;MACxCC,KAAK,GAAGJ,oBAAoB,CAACI,KAAK;IACpC,IAAIC,kBAAkB,GAAGpB,iBAAiB,CAACc,UAAU,EAAET,IAAI,CAAC;MAC1DgB,gBAAgB,GAAGD,kBAAkB,CAACH,MAAM;MAC5CK,eAAe,GAAGF,kBAAkB,CAACD,KAAK;IAC5C,IAAII,QAAQ,GAAGpB,UAAU,CAACqB,GAAG,CAACL,KAAK,EAAEG,eAAe,CAAC;IACrD,OAAOlB,cAAc,CAACS,YAAY,CAACY,MAAM,CAAC;MACxCR,MAAM,EAAEd,UAAU,CAACD,QAAQ,CAACe,MAAM,EAAEI,gBAAgB,CAAC;MACrDH,QAAQ,EAAEA,QAAQ;MAClBC,KAAK,EAAEI;IACT,CAAC,CAAC,EAAEA,QAAQ,CAAC;EACf,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}