{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Desktop/uber/src/RestaurantsList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = 'AIzaSyAyg7Hqr5wUTTv2uL6PMA3-F7fcHBGzhOw';\nconst mapApiJs = 'https://maps.googleapis.com/maps/api/js';\nexport default function RestaurantsList(props) {\n  _s();\n  const USDollar = props.USDollar;\n  const debug = props.debug;\n  const roundedToFixed = props.roundedToFixed;\n  const setDeliveryFee = props.setDeliveryFee;\n  const setRestaurant = props.setRestaurant;\n  const setRestaurantName = props.setRestaurantName;\n  const setRestaurantAddress = props.setRestaurantAddress;\n  const address = props.address;\n  const setAddress = props.setAddress;\n  const setDistance = props.setDistance;\n  const showGetLocation = props.showGetLocation;\n  const setShowGetLocation = props.setShowGetLocation;\n  const [restaurants, setRestaurants] = useState([]);\n  const [restaurantsCopy, setRestaurantsCopy] = useState([]);\n  const searchInput = useRef(null);\n  const [latitude, setLatitude] = useState(-1);\n  const [longitude, setLongitude] = useState(-1);\n  const [itemConfig, setItemConfig] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const result = Object.groupBy(restaurants, r => r.category);\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/restaurants').then(res => {\n      //console.log(res.data);\n      const r = res.data.map(r => {\n        return r;\n      });\n      setRestaurants(r);\n      setRestaurantsCopy(r);\n    });\n  }, [setRestaurants]);\n  function loadAsyncScript(src) {\n    return new Promise(resolve => {\n      const script = document.createElement(\"script\");\n      Object.assign(script, {\n        type: \"text/javascript\",\n        async: true,\n        src\n      });\n      script.addEventListener(\"load\", () => resolve(script));\n      document.head.appendChild(script);\n    });\n  }\n  const extractAddress = place => {\n    const address = {\n      streetNumber: \"\",\n      street: \"\",\n      city: \"\",\n      state: \"\",\n      zip: \"\"\n    };\n    if (!Array.isArray(place === null || place === void 0 ? void 0 : place.address_components)) {\n      return address;\n    }\n    place.address_components.forEach(component => {\n      const types = component.types;\n      const value = component.short_name;\n      console.log(component);\n      if (types.includes(\"street_number\")) {\n        address.streetNumber = value;\n      }\n      if (types.includes(\"route\")) {\n        address.street = value;\n      }\n      if (types.includes(\"locality\")) {\n        address.city = value;\n      }\n      if (types.includes(\"administrative_area_level_1\")) {\n        address.state = value;\n      }\n      if (types.includes(\"postal_code\")) {\n        address.zip = value;\n      }\n    });\n    return address;\n  };\n  const initMapScript = () => {\n    if (window.google) {\n      return Promise.resolve();\n    }\n    const src = `${mapApiJs}?key=${apiKey}&libraries=places,geometry`;\n    return loadAsyncScript(src);\n  };\n  const onChangeAddress = autocomplete => {\n    const place = autocomplete.getPlace();\n    if (place != null && place != undefined) {\n      setAddress(extractAddress(place));\n      console.log(place.geometry.location);\n      setLatitude(place.geometry.location.lat());\n      setLongitude(place.geometry.location.lng());\n      setShowGetLocation(false);\n    } else {\n      setAddress(null);\n      console.log(\"ERROR - Place null or undefined!\");\n    }\n  };\n  const initAutocomplete = () => {\n    if (!searchInput.current) return;\n    const autocomplete = new window.google.maps.places.Autocomplete(searchInput.current);\n    const southwest = {\n      lat: 33.833322851100824,\n      lng: -117.46334029886367\n    };\n    const northeast = {\n      lat: 34.02489224499665,\n      lng: -117.3135582245764\n    };\n    const newBounds = new window.google.maps.LatLngBounds(southwest, northeast);\n    autocomplete.setBounds(newBounds);\n    autocomplete.setFields([\"address_component\", \"geometry\"]);\n    autocomplete.addListener(\"place_changed\", () => onChangeAddress(autocomplete));\n  };\n  function addressDisplayed() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"address\",\n      children: [/*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Street: \", address.streetNumber, \" \", address.street]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"City: \", address.city]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"State: \", address.state]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Zip: \", address.zip]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n  function resetAddressWarning(e) {\n    return e.target.value.length == 0 ? setShowGetLocation(true) : \"\";\n  }\n  function handleSearch(e) {\n    let val = e.target.value;\n    setQuery(val);\n    if (val.length == 0) {\n      val = null;\n    }\n    axios.get('http://localhost:3000/api/menu/item/search', {\n      params: {\n        menuItemName: val\n      }\n    }).then(res => {\n      setItemConfig(res.data);\n      setRestaurants(res.data.length <= 0 ? restaurantsCopy : restaurants.filter(r => {\n        return res.data.find(x => x.restaurant === r.id);\n      }));\n    });\n  }\n  let lastCategory = \"\";\n  function setLastCategoryPrinted(v) {\n    lastCategory = v;\n  }\n  const restaurantData = [];\n  function populateRestaurantData() {\n    for (const j in result) {\n      for (const i in result[j]) {\n        restaurantData.push(result[j][i]);\n      }\n    }\n  }\n  populateRestaurantData();\n  function Welcome() {\n    initMapScript().then(() => initAutocomplete());\n    return showGetLocation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row search p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to Riverside County Delivery!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"We'll deliver fast food, groceries, alcohol, and more...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(DeliveryAddress, {\n          showGetLocation: showGetLocation,\n          setShowGetLocation: setShowGetLocation,\n          address: address\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-sm-12\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control mt-0 text-bg-dark rounded\",\n              ref: searchInput,\n              type: \"text\",\n              placeholder: \"### Street\",\n              onChange: e => resetAddressWarning(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 25\n        }, this), debug ? addressDisplayed : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }, this) : \"\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Welcome, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), !showGetLocation ? /*#__PURE__*/_jsxDEV(DeliveryAddress, {\n      showGetLocation: showGetLocation,\n      setShowGetLocation: setShowGetLocation,\n      address: address\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), !showGetLocation ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search for item...\",\n          className: \"form-control text-bg-dark rounded\",\n          value: query,\n          onChange: e => handleSearch(e),\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 21\n    }, this) : \"\", !showGetLocation ? restaurantData.map((data, key) => {\n      const h = haversine_dist(data.lat, data.lng, latitude, longitude);\n      const fee = 10 + (h < 1 ? 1 : roundedToFixed(h, 1));\n      const maxFee = 100;\n      function selectRestaurant(data) {\n        setRestaurantName(data.name);\n        setRestaurant(data.id);\n        setRestaurantAddress(data.address);\n        setDeliveryFee(fee);\n        setDistance(h);\n      }\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [data.category != null && lastCategory != data.category ? /*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"indent\",\n          children: data.category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 87\n        }, this) : \"\", data.category != null ? setLastCategoryPrinted(data.category) : \"\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/menu\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary m-1\",\n            onClick: e => selectRestaurant(data),\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [data.address, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: fee > maxFee ? \"--\" : USDollar.format(roundedToFixed(fee, 2))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 41\n              }, this), \" Delivery Fee\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: roundedToFixed(h, 1)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 44\n              }, this), \" Miles\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }, this)]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 25\n      }, this);\n    }) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n}\n_s(RestaurantsList, \"R3/VQbRK7cGJvyzVMuH19pJT1ow=\");\n_c = RestaurantsList;\nexport function haversine_dist(lat, lng, lat2, lng2) {\n  var R = 3958.8;\n  var rlat1 = lat2 * (Math.PI / 180);\n  var rlat2 = lat * (Math.PI / 180);\n  var difflat = rlat2 - rlat1;\n  var difflon = (lng - lng2) * (Math.PI / 180);\n  var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat / 2) * Math.sin(difflat / 2) + Math.cos(rlat1) * Math.cos(rlat2) * Math.sin(difflon / 2) * Math.sin(difflon / 2)));\n  return d;\n}\nexport function getStreetOnly(address) {\n  return address.streetNumber + \" \" + address.street;\n}\nexport function getFullAddress(address) {\n  if (address == undefined) {\n    return \"Error\";\n  }\n  const streetNumber = address.streetNumber + \" \";\n  const street = address.street ? address.street + \", \" : \"\";\n  const city = address.city ? address.city + \", \" : \"\";\n  const state = address.state ? address.state + \" \" : \"\";\n  const zip = address.zip;\n  return streetNumber + street + city + state + zip;\n}\nexport function DeliveryAddress(props) {\n  const showGetLocation = props.showGetLocation;\n  const setShowGetLocation = props.setShowGetLocation;\n  const address = props.address;\n  const defaultAddress = function () {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-danger\",\n      children: /*#__PURE__*/_jsxDEV(\"u\", {\n        children: \"Address Required Below!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 16\n    }, this);\n  };\n  function changeAddress() {\n    setShowGetLocation(true);\n    //navigate(\"/\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"h6\", {\n    className: \"m-1\",\n    children: [\"Deliver to: \", showGetLocation ? defaultAddress() : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"mark\", {\n        className: \"linespacing\",\n        children: getFullAddress(address)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        onClick: e => changeAddress(),\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 305,\n    columnNumber: 9\n  }, this);\n}\n_c2 = DeliveryAddress;\nvar _c, _c2;\n$RefreshReg$(_c, \"RestaurantsList\");\n$RefreshReg$(_c2, \"DeliveryAddress\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","Link","useNavigate","jsxDEV","_jsxDEV","apiKey","mapApiJs","RestaurantsList","props","_s","USDollar","debug","roundedToFixed","setDeliveryFee","setRestaurant","setRestaurantName","setRestaurantAddress","address","setAddress","setDistance","showGetLocation","setShowGetLocation","restaurants","setRestaurants","restaurantsCopy","setRestaurantsCopy","searchInput","latitude","setLatitude","longitude","setLongitude","itemConfig","setItemConfig","query","setQuery","result","Object","groupBy","r","category","get","then","res","data","map","loadAsyncScript","src","Promise","resolve","script","document","createElement","assign","type","async","addEventListener","head","appendChild","extractAddress","place","streetNumber","street","city","state","zip","Array","isArray","address_components","forEach","component","types","value","short_name","console","log","includes","initMapScript","window","google","onChangeAddress","autocomplete","getPlace","undefined","geometry","location","lat","lng","initAutocomplete","current","maps","places","Autocomplete","southwest","northeast","newBounds","LatLngBounds","setBounds","setFields","addListener","addressDisplayed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","resetAddressWarning","e","target","length","handleSearch","val","params","menuItemName","filter","find","x","restaurant","id","lastCategory","setLastCategoryPrinted","v","restaurantData","populateRestaurantData","j","i","push","Welcome","DeliveryAddress","ref","placeholder","onChange","key","h","haversine_dist","fee","maxFee","selectRestaurant","name","to","onClick","format","_c","lat2","lng2","R","rlat1","Math","PI","rlat2","difflat","difflon","d","asin","sqrt","sin","cos","getStreetOnly","getFullAddress","defaultAddress","changeAddress","href","_c2","$RefreshReg$"],"sources":["/Users/chris/Desktop/uber/src/RestaurantsList.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\n\nconst apiKey = 'AIzaSyAyg7Hqr5wUTTv2uL6PMA3-F7fcHBGzhOw';\nconst mapApiJs = 'https://maps.googleapis.com/maps/api/js';\n\nexport default function RestaurantsList(props) {\n    const USDollar = props.USDollar;\n    const debug = props.debug;\n    const roundedToFixed = props.roundedToFixed;\n    const setDeliveryFee = props.setDeliveryFee;\n    const setRestaurant = props.setRestaurant;\n    const setRestaurantName = props.setRestaurantName;\n    const setRestaurantAddress = props.setRestaurantAddress;\n    const address = props.address;\n    const setAddress = props.setAddress;\n    const setDistance = props.setDistance;\n    const showGetLocation = props.showGetLocation;\n    const setShowGetLocation = props.setShowGetLocation;\n    const [restaurants, setRestaurants] = useState([]);\n    const [restaurantsCopy, setRestaurantsCopy] = useState([]);\n    const searchInput = useRef(null);\n    const [latitude, setLatitude] = useState(-1);\n    const [longitude, setLongitude] = useState(-1);\n    const [itemConfig, setItemConfig] = useState([]);\n    const [query, setQuery] = useState(\"\");\n    const result = Object.groupBy(restaurants, r => r.category);\n    \n    useEffect(() => {\n        axios.get('http://localhost:3000/api/restaurants')\n            .then(res => {\n                //console.log(res.data);\n                const r = res.data.map(r => { return r });\n                setRestaurants(r);\n                setRestaurantsCopy(r);\n            });\n    }, [setRestaurants]);\n\n    function loadAsyncScript(src) {\n        return new Promise(resolve => {\n            const script = document.createElement(\"script\");\n            Object.assign(script, {\n                type: \"text/javascript\",\n                async: true,\n                src\n            })\n            script.addEventListener(\"load\", () => resolve(script));\n            document.head.appendChild(script);\n        })\n    }\n    const extractAddress = (place) => {\n        const address = {\n            streetNumber: \"\",\n            street: \"\",\n            city: \"\",\n            state: \"\",\n            zip: \"\",\n        }\n        if (!Array.isArray(place?.address_components)) {\n            return address;\n        }\n        place.address_components.forEach(component => {\n            const types = component.types;\n            const value = component.short_name;\n            console.log(component);\n            if (types.includes(\"street_number\")) {\n                address.streetNumber = value;\n            }\n            if (types.includes(\"route\")) {\n                address.street = value;\n            }\n            if (types.includes(\"locality\")) {\n                address.city = value;\n            }\n            if (types.includes(\"administrative_area_level_1\")) {\n                address.state = value;\n            }\n            if (types.includes(\"postal_code\")) {\n                address.zip = value;\n            }\n        });\n        return address;\n    }\n    const initMapScript = () => {\n        if (window.google) {\n            return Promise.resolve();\n        }\n        const src = `${mapApiJs}?key=${apiKey}&libraries=places,geometry`;\n        return loadAsyncScript(src);\n    }\n    const onChangeAddress = (autocomplete) => {\n        const place = autocomplete.getPlace();\n        if (place != null && place != undefined) {\n            setAddress(extractAddress(place));\n            console.log(place.geometry.location);\n            setLatitude(place.geometry.location.lat());\n            setLongitude(place.geometry.location.lng());\n            setShowGetLocation(false);\n        } else {\n            setAddress(null);\n            console.log(\"ERROR - Place null or undefined!\");\n        }\n    }\n    const initAutocomplete = () => {\n        if (!searchInput.current) return;\n        \n        const autocomplete = new window.google.maps.places.Autocomplete(searchInput.current);\n        const southwest = { lat: 33.833322851100824, lng: -117.46334029886367 };\n        const northeast = { lat: 34.02489224499665, lng: -117.3135582245764 };\n        const newBounds = new window.google.maps.LatLngBounds(southwest, northeast);\n        autocomplete.setBounds(newBounds);\n        autocomplete.setFields([\"address_component\", \"geometry\"]);\n        autocomplete.addListener(\"place_changed\", () => onChangeAddress(autocomplete));\n        \n    }\n    function addressDisplayed() {\n        return (\n            <div className=\"address\">\n                <small>\n                    Street: {address.streetNumber} {address.street}\n                </small>\n                <br />\n                <small>City: {address.city}</small>\n                <br />\n                <small>State: {address.state}</small>\n                <br />\n                <small>Zip: {address.zip}</small>\n            </div>\n        );\n    }\n\n    function resetAddressWarning(e) {\n        return e.target.value.length == 0 ? setShowGetLocation(true) : \"\";\n    }\n    function handleSearch(e) {\n        let val = e.target.value;\n        setQuery(val);\n        if (val.length == 0) {\n            val = null;\n        }\n        axios.get('http://localhost:3000/api/menu/item/search', { params: { menuItemName: val } })\n            .then(res => {\n                setItemConfig(res.data);\n                setRestaurants(res.data.length <= 0 ? restaurantsCopy : restaurants.filter((r) => {\n                    return res.data.find(x => x.restaurant === r.id);\n                }))\n            })\n    }\n\n    let lastCategory = \"\";\n    function setLastCategoryPrinted(v) {\n        lastCategory = v;\n    }\n\n    const restaurantData = [];\n    function populateRestaurantData() {\n        for (const j in result) {\n            for (const i in result[j]) {\n                restaurantData.push(result[j][i]);\n            }\n        }\n    }\n    populateRestaurantData();\n    function Welcome() {\n        initMapScript().then(() => initAutocomplete());\n        return (\n            showGetLocation ? \n                <div className=\"row search p-5\">\n                    <h2>Welcome to Riverside County Delivery!</h2>\n                    <h1>We'll deliver fast food, groceries, alcohol, and more...</h1>\n                    <div className=\"col-sm-12\">\n                        <DeliveryAddress \n                            showGetLocation={showGetLocation} \n                            setShowGetLocation={setShowGetLocation}\n                            address={address} \n                        />\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\">\n                                <input\n                                    className=\"form-control mt-0 text-bg-dark rounded\"\n                                    ref={searchInput}\n                                    type=\"text\"\n                                    placeholder=\"### Street\"\n                                    onChange={(e) => resetAddressWarning(e)}\n                                />\n                            </div>\n                        </div>\n                        {debug ? addressDisplayed : \"\"}\n                    </div>\n                </div> : \"\"\n        )\n    }\n    return (\n        <div>\n            <Welcome />\n            {\n                !showGetLocation ? \n                    <DeliveryAddress \n                        showGetLocation={showGetLocation} \n                        setShowGetLocation={setShowGetLocation} \n                        address={address} \n                    /> \n                : \"\"\n            }\n            <br />\n            {\n                !showGetLocation ?\n                    <div className=\"row\">\n                        <div className=\"col-sm-12\">\n                            <input \n                                placeholder=\"Search for item...\" \n                                className=\"form-control text-bg-dark rounded\" \n                                value={query} \n                                onChange={(e) => handleSearch(e)} \n                                type=\"text\" \n                            />\n                        </div>\n                    </div>\n                : \"\"\n            }\n            {!showGetLocation ? \n                restaurantData.map((data, key) => {\n                    const h = haversine_dist(data.lat, data.lng, latitude, longitude);\n                    const fee = 10 + (h < 1 ? 1 : roundedToFixed(h, 1));\n                    const maxFee = 100;\n                    function selectRestaurant(data) {\n                        setRestaurantName(data.name);\n                        setRestaurant(data.id);\n                        setRestaurantAddress(data.address);\n                        setDeliveryFee(fee);\n                        setDistance(h);\n                    }\n                    return (\n                        <span key={key}>\n                            {data.category != null && lastCategory != data.category ? <h5 className=\"indent\">{data.category}</h5> : \"\"}\n                            {data.category != null ? setLastCategoryPrinted(data.category) : \"\"}\n                            <Link to={\"/menu\"}>\n                                <button\n                                    className=\"btn btn-primary m-1\"\n                                    onClick={(e) => selectRestaurant(data)}>\n                                    <b>{data.name}</b>\n                                    <br />\n                                    <small>\n                                        {data.address}\n                                        <br />\n                                        <span>\n                                            {fee > maxFee ? \"--\" : USDollar.format(roundedToFixed(fee, 2))}\n                                        </span> Delivery Fee\n                                    </small>\n                                    <br />\n                                    <small><span>\n                                        {roundedToFixed(h, 1)}</span> Miles\n                                    </small>\n                                </button>\n                            </Link>\n                        </span>\n                    );\n                }) : \"\"\n            }\n        </div>\n    );\n}\n\nexport function haversine_dist(lat, lng, lat2, lng2) {\n    var R = 3958.8;\n    var rlat1 = lat2 * (Math.PI / 180);\n    var rlat2 = lat * (Math.PI / 180);\n    var difflat = rlat2 - rlat1;\n    var difflon = (lng - lng2) * (Math.PI / 180);\n    var d = 2 * R * Math.asin(Math.sqrt(Math.sin(difflat / 2) * Math.sin(difflat / 2) + Math.cos(rlat1) * Math.cos(rlat2) * Math.sin(difflon / 2) * Math.sin(difflon / 2)));\n    return d;\n}\n\nexport function getStreetOnly(address) {\n    return address.streetNumber + \" \" + address.street;\n}\n\nexport function getFullAddress(address) {\n    if (address == undefined) {\n        return \"Error\";\n    }\n    const streetNumber = address.streetNumber + \" \";\n    const street = address.street ? address.street + \", \" : \"\";\n    const city = address.city ? address.city + \", \" : \"\";\n    const state = address.state ? address.state + \" \" : \"\";\n    const zip = address.zip;\n    return streetNumber + street + city + state + zip;\n}\n\nexport function DeliveryAddress(props) {\n    const showGetLocation = props.showGetLocation;\n    const setShowGetLocation = props.setShowGetLocation;\n    const address = props.address;\n    const defaultAddress = function () {\n        return <span className='text-danger'>\n            <u>Address Required Below!</u>\n        </span>\n    };\n    function changeAddress() {\n        setShowGetLocation(true);\n        //navigate(\"/\");\n    }\n    return (\n        <h6 className=\"m-1\">\n            Deliver to: {showGetLocation ? defaultAddress() : \n                <span>\n                    <mark className=\"linespacing\">\n                        {getFullAddress(address)}\n                    </mark>\n                    <span> </span>\n                    <a \n                        href=\"#\"\n                        onClick={(e) => changeAddress()}>Update\n                    </a>\n                </span>}\n        </h6>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}